summary: Update a File
description: Update an existing file, and/or replace it's file contents.
tags:
- Files
operationId: updateFile
parameters:
- $ref: ../../../components/parameters.yaml#/UUId
- $ref: ../../../components/parameters.yaml#/Fields
- $ref: ../../../components/parameters.yaml#/Meta
requestBody:
  content:
    multipart/data:
      schema:
        type: object
        required:
        - file
        properties:
          title:
            type: string
            description: Title for the file. Is extracted from the filename on upload,
              but can be edited by the user.
            example: User Avatar
          filename_download:
            type: string
            description: Preferred filename when file is downloaded.
          description:
            type: string
            description: Description for the file.
            nullable: true
          folder:
            description: Virtual folder where this file resides in.
            example:
            oneOf:
            - type: string
            - $ref: ../../components/schemas/folders.yaml
            nullable: true
          tags:
            type: array
            description: Tags for the file. Is automatically populated based on Exif
              data for images.
            nullable: true
            items:
              type: string
          file:
            description: File contents.
            format: binary
    application/json:
      schema:
        type: object
        properties:
          title:
            type: string
            description: Title for the file. Is extracted from the filename on upload,
              but can be edited by the user.
            example: User Avatar
          filename_download:
            type: string
            description: Preferred filename when file is downloaded.
          description:
            type: string
            description: Description for the file.
            nullable: true
          folder:
            description: Virtual folder where this file resides in.
            example:
            oneOf:
            - type: string
            - $ref: ../../components/schemas/folders.yaml
            nullable: true
          tags:
            type: array
            description: Tags for the file. Is automatically populated based on Exif
              data for images.
            nullable: true
            items:
              type: string
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../components/schemas/files.yaml
  '401':
    $ref: ../../components/responses.yaml#/UnauthorizedError
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, updateFile } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(updateFile(file_id, partial_file_object));
- label: GraphQL
  lang: GraphQL
  source: |
    POST /graphql/system

    type Mutation {
    	update_files_item(id: ID!, data: update_directus_files_input!): directus_files
    }

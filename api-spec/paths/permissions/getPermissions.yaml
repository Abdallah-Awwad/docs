summary: List Permissions
description: List all permissions.
operationId: getPermissions
parameters:
  - "$ref": "../../components/Parameters.yaml#/Fields"
  - "$ref": "../../components/Parameters.yaml#/Limit"
  - "$ref": "../../components/Parameters.yaml#/Offset"
  - "$ref": "../../components/Parameters.yaml#/Meta"
  - "$ref": "../../components/Parameters.yaml#/Sort"
  - "$ref": "../../components/Parameters.yaml#/Filter"
  - "$ref": "../../components/Parameters.yaml#/Search"
  - "$ref": "../../components/Parameters.yaml#/Page"
responses:
  "200":
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                "$ref": "../../components/schemas/Permissions.yaml"
            meta:
              "$ref": "../../components/schemas/x-metadata.yaml"
  "401":
    "$ref": "../../components/Responses.yaml#/UnauthorizedError"
  "404":
    "$ref": "../../components/Responses.yaml#/NotFoundError"
tags:
  - Permissions
x-codeSamples:
  - label: Directus SDK
    lang: JavaScript
    source: |
      import { createDirectus, rest, readPermissions } from '@directus/sdk';
      const client = createDirectus('directus_project_url').with(rest());

      const result = await client.request(readPermissions(query_object));
  - label: GraphQL
    lang: GraphQL
    source: |
      POST /graphql/system

      type Query {
        permissions: directus_permissions
      }

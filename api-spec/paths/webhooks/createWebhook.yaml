summary: Create a Webhook
description: Create a new webhook.
operationId: createWebhook
parameters:
- $ref: ../../components/parameters.yaml#/Fields
- $ref: ../../components/parameters.yaml#/Meta
requestBody:
  content:
    application/json:
      schema:
        type: object
        properties:
          name:
            type: string
            description: The name of the webhook.
            example: create articles
          method:
            type: string
            description: Method used in the webhook.
            example: POST
          url:
            type: string
            description: The url of the webhook.
            example:
          status:
            type: string
            description: The status of the webhook.
            example: active
          data:
            type: boolean
            description: If yes, send the content of what was done
            example: true
          actions:
            description: The actions that triggers this webhook.
            example:
          system-collections:
            description: The collections that triggers this webhook.
            example:
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../components/schemas/roles.yaml
  '401':
    $ref: ../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../components/responses.yaml#/NotFoundError
tags:
- Webhooks
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, createWebhook } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(createWebhook(webhook_object));
- label: GraphQL
  lang: GraphQL
  source: |
    POST /graphql/system

    type Mutation {
    	create_webhooks_item(data: create_directus_webhooks_input!): directus_webhooks
    }
